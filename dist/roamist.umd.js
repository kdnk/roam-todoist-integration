var U=Object.defineProperty,_=Object.defineProperties;var R=Object.getOwnPropertyDescriptors;var b=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable;var O=(t,o,c)=>o in t?U(t,o,{enumerable:!0,configurable:!0,writable:!0,value:c}):t[o]=c,y=(t,o)=>{for(var c in o||(o={}))A.call(o,c)&&O(t,c,o[c]);if(b)for(var c of b(o))j.call(o,c)&&O(t,c,o[c]);return t},S=(t,o)=>_(t,R(o));(function(t,o){typeof exports=="object"&&typeof module!="undefined"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(t=typeof globalThis!="undefined"?globalThis:t||self,o(t.roamist={}))})(this,function(t){"use strict";const o=async()=>{const w=window.TODOIST_TOKEN,m=roam42.common.currentActiveBlockUID(),a=(await roam42.common.getBlockInfoByUID(m))[0][0],f=(a==null?void 0:a.string).match(/\d{10}/),T="https://api.todoist.com/rest/v1/tasks/"+f+"/close",e="Bearer "+w;await fetch(T,{method:"POST",headers:{Authorization:e}});const s=a.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");return await roam42.common.updateBlock(m,s),""},c=async({todoistFilter:w,onlyDiff:m})=>{const g=encodeURIComponent(w),a=async()=>{const n=`https://api.todoist.com/rest/v1/tasks?filter=${g}`,r="Bearer "+window.TODOIST_TOKEN;return await fetch(n,{headers:{Authorization:r}}).then(B=>B.json())},p=async({description:n,currentBlockUid:r,currentIndent:k})=>{const B=await roam42.common.createBlock(r,k+1,"desc::");let d;const I=n.split(/\r?\n/);for(const[u,h]of I.entries())u===0?d=await roam42.common.createBlock(B,k+2,h):d=await roam42.common.createSiblingBlock(d,h)},f=await window.RTI.getTodoistProjects(),T=await a();let e=T.filter(n=>!n.parent_id);m&&(e=await window.RTI.dedupTaskList(e)),e.sort((n,r)=>r.priority-n.priority);const s=T.filter(n=>n.parent_id),l=roam42.common.currentActiveBlockUID();let i=l;for(const[n,r]of e.entries()){const k=window.RTI.getTodoistProject(f,r.project_id);i=await roam42.common.createSiblingBlock(i,window.RTI.createTodoistTaskString({task:r,project:k}),!0),r.description&&await p({description:r.description,currentBlockUid:i,currentIndent:1});const B=s.filter(I=>I.parent_id===r.id);let d;for(const[I,u]of B.entries())I===0?d=await roam42.common.createBlock(i,1,window.RTI.createTodoistTaskString({task:u,project:k})):d=await roam42.common.createSiblingBlock(d,window.RTI.createTodoistTaskString({task:u,project:k}),!0),u.description&&await p({description:u.description,currentBlockUid:d,currentIndent:2});n===0&&await roam42.common.deleteBlock(l)}return""},D=async()=>{const w=async()=>{const e="https://api.todoist.com/rest/v1/tasks",s="Bearer "+window.TODOIST_TOKEN;return(await fetch(e,{headers:{Authorization:s}}).then(i=>i.json())).map(i=>i.id)},m=async e=>{try{return await window.roamAlphaAPI.q(`
        [:find (pull ?refs [:block/string :block/uid {:block/children ...}])
          :where [?refs :block/refs ?title][?refs :block/refs ?todoTitle][?todoTitle :node/title "TODO"][?title :node/title "${e}"]]`)}catch(s){return console.log("error in getTodoBlocksReferringToThisPage: ",s),[]}},g=async()=>(await m(window.RTI.TODOIST_TAG_NAME)).map(s=>{const l=s[0],{string:i}=l,n=i.match(/\d{10}/)[0];return S(y({},l),{todoistId:n})}),a=(e,s)=>s.filter(({todoistId:i})=>!e.includes(Number(i))),p=await w(),f=await g(),T=a(p,f);for(const e of T){const s=e.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");await roam42.common.updateBlock(e.uid,s)}return""};t.completeTask=o,t.pullTasks=c,t.syncCompleted=D,Object.defineProperty(t,"__esModule",{value:!0}),t[Symbol.toStringTag]="Module"});
