var N=Object.defineProperty,E=Object.defineProperties;var P=Object.getOwnPropertyDescriptors;var y=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var D=(l,d,u)=>d in l?N(l,d,{enumerable:!0,configurable:!0,writable:!0,value:u}):l[d]=u,$=(l,d)=>{for(var u in d||(d={}))v.call(d,u)&&D(l,u,d[u]);if(y)for(var u of y(d))x.call(d,u)&&D(l,u,d[u]);return l},O=(l,d)=>E(l,P(d));(function(l){typeof define=="function"&&define.amd?define(l):l()})(function(){"use strict";const l=async()=>{const o=window.TODOIST_TOKEN,n=roam42.common.currentActiveBlockUID(),t=(await roam42.common.getBlockInfoByUID(n))[0][0],g=(t==null?void 0:t.string).match(/\d{10}/),r="https://api.todoist.com/rest/v1/tasks/"+g+"/close",e="Bearer "+o;await fetch(r,{method:"POST",headers:{Authorization:e}});const c=t.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");return await roam42.common.updateBlock(n,c),""};window.RTI=window.RTI||{},window.RTI.TODOIST_TAG_NAME=window.RTI.TODOIST_TAG_NAME||"42Todoist";const d=o=>{const[n,m,t]=o.split("-").map(e=>Number(e)),g=["January","February","March","April","May","June","July","August","September","October","November","December"][m-1],r=t>=4&&t<=20||t>=24&&t<=30?"th":["st","nd","rd"][t%10-1];return`${g} ${t}${r}, ${n}`},u=o=>{try{return o.match(/\d{10}/)[0]}catch(n){return console.warn(n),""}},B=({task:o,project:n})=>{function m(r){const e=r.match(/\[(.*)\]\((.*)\)/);if(e){const[c,k,s]=e,i=((a,f)=>a.split(f).join(""))(r,c),w=new URL(s),I=[...k.matchAll(/\[(.[^\]\[]*)\]/g)];if(I.length>0){let a=k,f="";return I.forEach(([h,b])=>{a=a.replace(h,""),f=`${f} #[[${b}]]`}),s.includes("bts")?`${i}[${a}](${w.origin}${w.pathname}) ${f}`:`${i}[${a}](${s}) ${f}`}else return s.includes("bts")?`${i}[${k}](${w.origin}${w.pathname})`:`${i}[${k}](${s})`}else return r}let t=`${m(o.content)} [\u{1F517}](${o.url})`,T="";o.priority=="4"?T="p1":o.priority=="3"?T="p2":o.priority=="2"?T="p3":o.priority=="1"&&(T="p4"),t=`#priority/${T} ${t}`;const g=u(o.url);return g&&(t=`${t} #Todoist/${g}`),o.due&&(t=`${t} [[${d(o.due.date)}]]`),t=`${t} #[[${n.name}]] #${window.RTI.TODOIST_TAG_NAME}`,`{{[[TODO]]}} ${t} `},A=async o=>{const n="[[(ancestor ?b ?a)[?a :block/children ?b]][(ancestor ?b ?a)[?parent :block/children ?b ](ancestor ?parent ?a) ]]",m=`[:find  (pull ?block [:block/uid :block/string])
                                  :in $ ?page_title %
                                  :where
                                  [?page :node/title ?page_title]
                                  [?block :block/string ?contents]
                                  [(clojure.string/includes? ?contents "#${window.RTI.TODOIST_TAG_NAME}")]
                                  (ancestor ?block ?page)]`;return await window.roamAlphaAPI.q(m,o,n)},S=async o=>{const n=await roam42.common.currentPageUID();console.log("[util.js:79] currentPageUid: ",n);const m=await roam42.common.getBlockInfoByUID(n),T=(await A(m[0][0].title)).map(r=>{const e=r[0];return u(e.string)});return o.filter(r=>{const e=u(r.url);return!T.includes(e)})},_=async()=>{const o="https://api.todoist.com/rest/v1/projects",n="Bearer "+TODOIST_TOKEN;return await fetch(o,{headers:{Authorization:n}}).then(t=>t.json())},U=(o,n)=>o.find(t=>t.id===n),R=async({todoistFilter:o,onlyDiff:n})=>{const m=encodeURIComponent(o),t=async()=>{const p=`https://api.todoist.com/rest/v1/tasks?filter=${m}`,i="Bearer "+window.TODOIST_TOKEN;return await fetch(p,{headers:{Authorization:i}}).then(I=>I.json())},T=async({description:p,currentBlockUid:i,currentIndent:w})=>{const I=await roam42.common.createBlock(i,w+1,"desc::");let a;const f=p.split(/\r?\n/);for(const[h,b]of f.entries())h===0?a=await roam42.common.createBlock(I,w+2,b):a=await roam42.common.createSiblingBlock(a,b)},g=await _(),r=await t();let e=r.filter(p=>!p.parent_id);n&&(e=await S(e)),e.sort((p,i)=>i.priority-p.priority);const c=r.filter(p=>p.parent_id),k=roam42.common.currentActiveBlockUID();let s=k;for(const[p,i]of e.entries()){const w=U(g,i.project_id);s=await roam42.common.createSiblingBlock(s,B({task:i,project:w}),!0),i.description&&await T({description:i.description,currentBlockUid:s,currentIndent:1});const I=c.filter(f=>f.parent_id===i.id);let a;for(const[f,h]of I.entries())f===0?a=await roam42.common.createBlock(s,1,B({task:h,project:w})):a=await roam42.common.createSiblingBlock(a,B({task:h,project:w}),!0),h.description&&await T({description:h.description,currentBlockUid:a,currentIndent:2});p===0&&await roam42.common.deleteBlock(k)}return""},j=async()=>{const o=async()=>{const e="https://api.todoist.com/rest/v1/tasks",c="Bearer "+window.TODOIST_TOKEN;return(await fetch(e,{headers:{Authorization:c}}).then(s=>s.json())).map(s=>s.id)},n=async e=>{try{return await window.roamAlphaAPI.q(`
        [:find (pull ?refs [:block/string :block/uid {:block/children ...}])
          :where [?refs :block/refs ?title][?refs :block/refs ?todoTitle][?todoTitle :node/title "TODO"][?title :node/title "${e}"]]`)}catch(c){return console.log("error in getTodoBlocksReferringToThisPage: ",c),[]}},m=async()=>(await n(window.RTI.TODOIST_TAG_NAME)).map(c=>{const k=c[0],{string:s}=k,p=s.match(/\d{10}/)[0];return O($({},k),{todoistId:p})}),t=(e,c)=>c.filter(({todoistId:s})=>!e.includes(Number(s))),T=await o(),g=await m(),r=t(T,g);for(const e of r){const c=e.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");await roam42.common.updateBlock(e.uid,c)}return""};window.RTI=O($({},window.RTI),{completeTask:l,pullTasks:R,syncCompleted:j}),console.log("<<< roamist >>> window.RTI: ",window.RTI),console.log("<<< roamist >>> setup compoleted.")});
