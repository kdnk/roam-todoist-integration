var U=Object.defineProperty,j=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var D=Object.getOwnPropertySymbols;var P=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable;var R=(n,s,l)=>s in n?U(n,s,{enumerable:!0,configurable:!0,writable:!0,value:l}):n[s]=l,O=(n,s)=>{for(var l in s||(s={}))P.call(s,l)&&R(n,l,s[l]);if(D)for(var l of D(s))N.call(s,l)&&R(n,l,s[l]);return n},$=(n,s)=>j(n,E(s));(function(n,s){typeof exports=="object"&&typeof module!="undefined"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(n=typeof globalThis!="undefined"?globalThis:n||self,s(n.roamist={}))})(this,function(n){"use strict";const s=async()=>{const e=window.TODOIST_TOKEN,a=roam42.common.currentActiveBlockUID(),t=(await roam42.common.getBlockInfoByUID(a))[0][0],g=(t==null?void 0:t.string).match(/\d{10}/),T="https://api.todoist.com/rest/v1/tasks/"+g+"/close",o="Bearer "+e;await fetch(T,{method:"POST",headers:{Authorization:o}});const r=t.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");return await roam42.common.updateBlock(a,r),""};window.RTI=window.RTI||{},window.RTI.TODOIST_TAG_NAME=window.RTI.TODOIST_TAG_NAME||"42Todoist";const l=({task:e,project:a})=>{function k(T){const o=T.match(/\[(.*)\]\((.*)\)/);if(o){const[r,w,i]=o,c=((d,f)=>d.split(f).join(""))(T,r),p=new URL(i),I=[...w.matchAll(/\[(.[^\]\[]*)\]/g)];if(I.length>0){let d=w,f="";return I.forEach(([h,B])=>{d=d.replace(h,""),f=`${f} #[[${B}]]`}),i.includes("bts")?`${c}[${d}](${p.origin}${p.pathname}) ${f}`:`${c}[${d}](${i}) ${f}`}else return i.includes("bts")?`${c}[${w}](${p.origin}${p.pathname})`:`${c}[${w}](${i})`}else return T}let t=`${k(e.content)} [\u{1F517}](${e.url})`,m="";e.priority=="4"?m="p1":e.priority=="3"?m="p2":e.priority=="2"?m="p3":e.priority=="1"&&(m="p4"),t=`#priority/${m} ${t}`;const g=window.RTI.getTodoistId(e.url);return g&&(t=`${t} #Todoist/${g}`),e.due&&(t=`${t} [[${window.RTI.convertToRoamDate(e.due.date)}]]`),t=`${t} #[[${a.name}]] #${window.RTI.TODOIST_TAG_NAME}`,`{{[[TODO]]}} ${t} `},S=async e=>{const a=await roam42.common.currentPageUID();console.log("[util.js:79] currentPageUid: ",a);const k=await roam42.common.getBlockInfoByUID(a),m=(await window.RTI.getAllTodoistBlocksFromPageTitle(k[0][0].title)).map(T=>{const o=T[0];return window.RTI.getTodoistId(o.string)});return e.filter(T=>{const o=window.RTI.getTodoistId(T.url);return!m.includes(o)})},A=async()=>{const e="https://api.todoist.com/rest/v1/projects",a="Bearer "+TODOIST_TOKEN;return await fetch(e,{headers:{Authorization:a}}).then(t=>t.json())},_=(e,a)=>e.find(t=>t.id===a),b=async({todoistFilter:e,onlyDiff:a})=>{const k=encodeURIComponent(e),t=async()=>{const u=`https://api.todoist.com/rest/v1/tasks?filter=${k}`,c="Bearer "+window.TODOIST_TOKEN;return await fetch(u,{headers:{Authorization:c}}).then(I=>I.json())},m=async({description:u,currentBlockUid:c,currentIndent:p})=>{const I=await roam42.common.createBlock(c,p+1,"desc::");let d;const f=u.split(/\r?\n/);for(const[h,B]of f.entries())h===0?d=await roam42.common.createBlock(I,p+2,B):d=await roam42.common.createSiblingBlock(d,B)},g=await A(),T=await t();let o=T.filter(u=>!u.parent_id);a&&(o=await S(o)),o.sort((u,c)=>c.priority-u.priority);const r=T.filter(u=>u.parent_id),w=roam42.common.currentActiveBlockUID();let i=w;for(const[u,c]of o.entries()){const p=_(g,c.project_id);i=await roam42.common.createSiblingBlock(i,l({task:c,project:p}),!0),c.description&&await m({description:c.description,currentBlockUid:i,currentIndent:1});const I=r.filter(f=>f.parent_id===c.id);let d;for(const[f,h]of I.entries())f===0?d=await roam42.common.createBlock(i,1,l({task:h,project:p})):d=await roam42.common.createSiblingBlock(d,l({task:h,project:p}),!0),h.description&&await m({description:h.description,currentBlockUid:d,currentIndent:2});u===0&&await roam42.common.deleteBlock(w)}return""},y=async()=>{const e=async()=>{const o="https://api.todoist.com/rest/v1/tasks",r="Bearer "+window.TODOIST_TOKEN;return(await fetch(o,{headers:{Authorization:r}}).then(i=>i.json())).map(i=>i.id)},a=async o=>{try{return await window.roamAlphaAPI.q(`
        [:find (pull ?refs [:block/string :block/uid {:block/children ...}])
          :where [?refs :block/refs ?title][?refs :block/refs ?todoTitle][?todoTitle :node/title "TODO"][?title :node/title "${o}"]]`)}catch(r){return console.log("error in getTodoBlocksReferringToThisPage: ",r),[]}},k=async()=>(await a(window.RTI.TODOIST_TAG_NAME)).map(r=>{const w=r[0],{string:i}=w,u=i.match(/\d{10}/)[0];return $(O({},w),{todoistId:u})}),t=(o,r)=>r.filter(({todoistId:i})=>!o.includes(Number(i))),m=await e(),g=await k(),T=t(m,g);for(const o of T){const r=o.string.replace("{{[[TODO]]}}","{{[[DONE]]}}");await roam42.common.updateBlock(o.uid,r)}return""};window.RTI=$(O({},window.RTI),{completeTask:s,pullTasks:b,syncCompleted:y}),console.log("[index.ts:12] window.RTI: ",window.RTI),n.completeTask=s,n.pullTasks=b,n.syncCompleted=y,Object.defineProperty(n,"__esModule",{value:!0}),n[Symbol.toStringTag]="Module"});
